#summary How to begin working with Itemscript in the GWT Java environment.
#labels Featured,Phase-Implementation,Phase-Deploy

== Add the JAR to your project's build path ==

Download the Itemscript distribution archive, extract it, and copy the JAR itemscript-gwt-x.x.x.jar into your project, and add it to your build path.

== Add the Itemscript module to your GWT module config ==

In your module's `.gwt.xml` configuration file, add the following line above your module's entry-point:

{{{
<inherits name="org.itemscript.Itemscript" />
}}}

This will allow you to use the Itemscript classes, and the entry-point for the Itemscript module will create a single static `JsonSystem` instance at `GwtSystem.SYSTEM`. Because the GWT environment is single-threaded, you probably don't need to create any new instances of `JsonSystem`, although if you need to, you can do so like this:

{{{
    JsonSystem system = new ItemscriptSystem(new GwtConfig());
}}}

== Create and populate a `JsonObject` ==

{{{
    JsonSystem system = GwtSystem.SYSTEM;
    JsonObject object = system.createObject();
    object.put("abc", "xyz");
    object.put("def", 123);
    object.put("ghi", true);
    JsonArray array = object.createArray("jkl");
    array.add("one");
    array.add(2);
    array.add(true);
}}}

== Convert a `JsonObject` to a JSON string ==

{{{
    String json = object.toString();
    System.out.println(json);
}}}

prints:

{{{
{
    "jkl" : [
        "one",
        2,
        true
    ],
    "abc" : "xyz",
    "ghi" : true,
    "def" : 123
}
}}}

== Parse a JSON string ==

{{{
    String json2 = "{\"foo\" : \"bar\"}";
    JsonObject object2 = system.parse(json2).asObject();
    String fooValue = object2.getString("foo");
    System.out.println(fooValue); // prints "bar"
}}}

== Parse a JSON value loaded via HTTP ==

Note that in the GWT environment, you don't want to wait until a value loaded from HTTP is fully loaded before continuing execution. So, you need to supply a callback that will be invoked when the `get` operation completes.

{{{
    system.get("http://itemscript.org/test.json", new GetCallback() {
        @Override
        public void onSuccess(JsonValue value) {
            System.out.println(value);
        }

        @Override
        public void onError(Throwable e) {
            System.err.println("error: " + e);
        }
    });
}}}

prints:

{{{
{
    "test-boolean" : true,
    "test-object" : {
        "abc" : "def",
        "foo" : [
            "x",
            "y",
            "z"
        ]
    },
    "test-int" : 1,
    "test-null" : null,
    "test-string" : "value",
    "test-array" : [
        "one",
        "two",
        "three",
        true,
        1,
        null,
        1.5,
        {
            "xyz" : "123"
        }
    ],
    "test-float" : 1.5
}
}}}